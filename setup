#!/bin/bash
ps cax | grep nginx > /dev/null
if ([ $? -eq 0 ] && [[ -d "/usr/local/openresty/nginx" ]]); then
service openresty stop
clear
echo "OpenResty/NginX detected, adding a new domain"
echo -e "\e[32m"'Give me the hostname (for example: live.mizban.cloud)'"? \033[0m"
read hostname
echo "A free port between 1935-5000 will be automatically selected"
declare -i port=1935
while
port=$port+1
netstat -atun | grep -q "$port"
do
continue
done
cd /usr/local/openresty/nginx/conf.d
cd rtmpconf
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/live.example.com.rtmp.conf
mv live.example.com.rtmp.conf $hostname.rtmp.conf
sed -i s/live.example.com/$hostname/g $hostname.rtmp.conf
sed -i s/1935/$port/g $hostname.rtmp.conf
cd ..
cd httpconf
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/live.example.com.http.conf
mv live.example.com.http.conf $hostname.http.conf
sed -i s/live.example.com/$hostname/g $hostname.http.conf
mkdir /usr/local/openresty/nginx/html/$hostname
mkdir /usr/local/openresty/nginx/html/$hostname/hls
mkdir /usr/local/openresty/nginx/html/$hostname/dash
mkdir /usr/local/openresty/nginx/html/$hostname/archive
chmod 777 /usr/local/openresty/nginx/html/$hostname/archive
service nginx restart
clear
echo "Selected port $port is free to use! owning.."
echo "Updating firewall rules.."
ufw allow $port
echo -e Your new domain "\e[32m$hostname \033[0mhas been successfully added!"
echo "Now you can send your OBS RTMP stream to rtmp://$hostname:$port/live"
echo "Your HLS output (adaptive quality) will be on http://$hostname/hls/streamkey.m3u8"
echo "Your DASH output (adaptive quality) will be on http://$hostname/dash/streamkey.mpd"
echo "================================================================================="
echo "Brought to you by MizbanCloud"
else
clear
echo "OpenResty/NginX not found, attempting to install"
echo -e "\e[32m"'Give me the hostname (for example: live.mizban.cloud)'"? \033[0m"
read hostname
cd ~
apt update && apt upgrade -y &&
sudo apt -y install autoconf automake build-essential cmake git-core libass-dev libfreetype6-dev libgnutls28-dev libsdl2-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev meson ninja-build pkg-config texinfo wget yasm zlib1g-dev
sudo apt-get install git build-essential libpcre3 libpcre3-dev libssl-dev zlibc zlib1g zlib1g-dev libnginx-mod-http-geoip libgeoip-dev -y
apt install libmaxminddb0 libmaxminddb-dev mmdb-bin geoipupdate -y
apt install libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev -y
cd /usr/src
rm openresty-1.19.3.1.tar.gz
wget --no-check-certificate https://openresty.org/download/openresty-1.19.3.1.tar.gz
tar -xvf openresty-1.19.3.1.tar.gz
git clone https://github.com/ed96win/nginx-rtmp-module.git
git clone https://github.com/leev/ngx_http_geoip2_module.git
cd openresty-1.19.3.1/
./configure -j32 --with-debug --with-threads --with-stream_ssl_module --with-stream --with-http_realip_module --with-http_ssl_module --with-http_flv_module --with-http_geoip_module --with-http_v2_module --add-module=../ngx_http_geoip2_module --add-module=../nginx-rtmp-module
sudo make -j32
sudo make install -j32
mkdir /usr/local/openresty/nginx/html/$hostname/
mkdir /usr/local/openresty/nginx/html/$hostname/hls
mkdir /usr/local/openresty/nginx/html/$hostname/dash
mkdir /usr/local/openresty/nginx/html/$hostname/archive
chmod 777 /usr/local/openresty/nginx/html/$hostname/archive
cp /usr/local/openresty/bin/openresty /usr/bin/openresty
mkdir /usr/local/openresty/nginx/geoip
cd /usr/local/openresty/nginx/geoip
rm GeoLite2-Country.mmdb
wget --no-check-certificate https://github.com/ed96win/Stream/raw/master/GeoLite2-Country.mmdb
cd /lib/systemd/system/
rm openresty.service
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/openresty.service
systemctl daemon-reload
service openresty stop
cd /usr/local/openresty/nginx/conf
rm nginx.conf
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/nginx.conf
mkdir /usr/local/openresty/nginx/conf.d/
cd /usr/local/openresty/nginx/conf.d
mkdir rtmpconf
mkdir httpconf
cd rtmpconf
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/live.example.com.rtmp.conf
mv live.example.com.rtmp.conf $hostname.rtmp.conf
sed -i s/live.example.com/$hostname/g $hostname.rtmp.conf
cd ..
cd httpconf
wget --no-check-certificate https://raw.githubusercontent.com/ed96win/Stream/master/live.example.com.http.conf
mv live.example.com.http.conf $hostname.http.conf
sed -i s/live.example.com/$hostname/g $hostname.http.conf
cd ~
sudo adduser nginx --gecos "First Last,RoomNumber,WorkPhone,HomePhone" --disabled-password
cd ~
#rm -rf openresty-1.19.3.1
#rm -rf nginx-rtmp-module
#rm rf ngx_http_geoip2_module
service openresty restart
systemctl enable openresty
ufw allow 1935
echo "OpenResty/NginX (with rtmp module and ffmpeg) has been installed successfully.
Now you can send your OBS RTMP stream to rtmp://$hostname:1935/live
Your HLS output (adaptive quality) will be on http://$hostname/hls/streamkey.m3u8
Your DASH output (adaptive quality) will be on http://$hostname/dash/streamkey.mpd"
echo "================================================================================="
echo "Brought to you by MizbanCloud"
fi
